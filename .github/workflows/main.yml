name: Daily Nunflix M3U Scraper

on:
  schedule:
    - cron: "0 8 * * *"  # Run every day at 8 AM UTC (4 AM EST)
  workflow_dispatch:      # Allow manual trigger

env:
  NODE_OPTIONS: "--max-old-space-size=2048"  # Increased memory limit
  OUTPUT_FILE: "movies&tvshows.m3u"

jobs:
  scrape:
    name: Scrape and Update M3U Playlist
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Only fetch the latest commit to save time/space
          persist-credentials: false

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to current LTS
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install System Dependencies
        run: |
          echo "Installing required system packages..."
          sudo apt-get update -qq
          
          # Essential dependencies for Puppeteer
          sudo apt-get install -y --no-install-recommends \
            libgbm-dev \
            libasound2 \
            libnss3 \
            libxss1 \
            libxtst6 \
            fonts-noto-color-emoji \
            fonts-freefont-ttf \
            xvfb \
            && sudo rm -rf /var/lib/apt/lists/*
          
          # Verify installed packages
          dpkg -l | grep -E 'libgbm-dev|libasound2|libnss3'

      - name: Optimize Disk Space
        run: |
          echo "Cleaning up disk space..."
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo apt-get clean
          df -h

      - name: Install Node Dependencies
        run: |
          npm ci --no-audit --prefer-offline
          npm cache clean --force

      - name: Run Scraper with Virtual Frame Buffer
        timeout-minutes: 45  # More reliable than shell timeout
        run: |
          echo "Starting scraper with Xvfb..."
          /usr/bin/Xvfb :99 -screen 0 1280x1024x24 &
          export DISPLAY=:99
          
          echo "Running main scraper script..."
          npx ts-node main.ts || (echo "Scraper failed with exit code $?"; exit 1)
          
          pkill -f Xvfb  # Clean up Xvfb process

      - name: Validate Output File
        run: |
          if [ ! -f "$OUTPUT_FILE" ]; then
            echo "::error::Output file $OUTPUT_FILE not found!"
            exit 1
          fi
          
          FILE_SIZE=$(du -h "$OUTPUT_FILE" | cut -f1)
          ENTRY_COUNT=$(grep -c "#EXTINF" "$OUTPUT_FILE" || echo 0)
          
          echo "File: $OUTPUT_FILE"
          echo "Size: $FILE_SIZE"
          echo "Entries: $ENTRY_COUNT"
          
          if [ "$ENTRY_COUNT" -lt 10 ]; then
            echo "::error::Too few entries ($ENTRY_COUNT) in M3U file!"
            exit 1
          fi
          
          echo "M3U_FILE=$OUTPUT_FILE" >> $GITHUB_ENV
          echo "ENTRY_COUNT=$ENTRY_COUNT" >> $GITHUB_ENV

      - name: Commit and Push Changes
        if: success() && env.ENTRY_COUNT > 0
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "Jamesh6210"
          git config user.email "adidassport2016@gmail.com"
          
          git add "$OUTPUT_FILE"
          
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update: M3U playlist with $ENTRY_COUNT entries [skip ci]"
            git push origin main
            echo "Changes pushed successfully"
          fi

      - name: Upload M3U as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: m3u-playlist
          path: ${{ env.OUTPUT_FILE }}
          retention-days: 3